*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:root{
  font-family: "Source Serif Pro";
  font-size: 62.5%;
}

body{
  color: #a54328;
  font-size: 1.6rem;
}

main{
  max-width: 32rem;
  margin-inline: auto; /* A propriedade margin-inline com o valor auto é usada 
  para centralizar um elemento horizontalmente dentro do seu contêiner, 
  considerando a direção inline (horizontal) do texto. Ela é uma abordagem mais 
  flexível em comparação com a utilização de margens específicas, uma vez que se 
  adapta ao tamanho disponível no contêiner.*/
  padding: 5.6rem 4rem;
  box-sizing: content-box; /*A propriedade box-sizing controla
   como o tamanho total de um elemento é calculado, levando em consideração
   as bordas e o preenchimento. 
   
   O valor "content-box" (valor padrão) faz com que o
   tamanho total do elemento seja calculado considerando apenas o conteúdo interno.
   As bordas e o preenchimento são adicionados ao tamanho total, o que pode aumentar 
   o tamanho total do elemento além do especificado. 
  
  Nesse caso, estou calculando o valor do max-width com o padding para não ter prejuízo 
  no espaçamento*/

  display: flex;
  flex-direction: column;
  gap:3.2rem;

}

img{
  width: 100%;
  margin-block: 3.2rem; /* A propriedade margin-block é usada para definir as
   margens verticais (espaçamento) de um elemento, considerando a direção do bloco 
   de conteúdo, que é vertical. Essa propriedade é usada em combinação com a propriedade
   margin-inline para controlar as margens horizontais, considerando a direção inline
   (horizontal) do texto.*/
}

button{
  font-family: "Source Serif 4";
  background-color: #a54328;

  color: white;

  border: 0;
  padding: 0.8rem 1.2rem;
  border-radius: 0.6rem;
  margin-top: 3.2rem;
}

h1, h2{
  /* clamp(min, idel, alto) */
  font-size: clamp(2.8rem, 2vw + 1rem, 4rem);
  line-height: clamp(3.6rem, 2vw + 1rem, 5rem);
}

h2{
  margin-bottom: 3.2rem;
}

p, li,strong{
  font-size: clamp(1.4rem, 1vw + 0.4rem, 2rem);
  line-height: clamp(1.8rem, 1vw + 0.4rem, 2.5rem);
}

ol, ul{
  padding-left: 1.8rem ;
}

ul{
  margin-bottom: 2.4rem;
}

@media (min-width:1000px){
  main{
    padding: 9rem 6rem;
    flex-direction: row;
    max-width: fit-content;
    gap:16rem;
  }

  .recipe{
    max-width: 43.5rem;
  }

  img{
    max-width: 35.1rem;
  }

  .ingredients{
    max-width: 52.5rem;
  }

 /*No contexto do CSS (Cascading Style Sheets), "clamp" é uma função que permite
  criar uma regra de tamanho que mantém um valor dentro de um intervalo específico. 
  Isso é especialmente útil para criar layouts responsivos onde você deseja definir 
  limites para o tamanho de um elemento, como um contêiner ou um texto, para garantir 
  que ele não fique muito pequeno ou muito grande.   */



 /* main > div{
    flex: 1; /*deixa a primeira div igual a segunda    
    max-width: 50rem; largura máxima }*/ 
    
  /*h1, h2{
      font-size: 4rem;
      line-height: 5rem;
   }

  p, li, strong{
    font-size: 2rem;
    line-height: 2.5rem;
}*/

button{
  padding: 1rem 2rem;
  font-size: 1.4rem;
  line-height: 2.4rem;
}

}